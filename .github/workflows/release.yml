name: Release and Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov black flake8 mypy

      - name: Lint with flake8
        run: |
          flake8 webscraper --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 webscraper --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        continue-on-error: true

      - name: Format check with black
        run: |
          black --check webscraper/
        continue-on-error: true

      - name: Type check with mypy
        run: |
          mypy webscraper/ --ignore-missing-imports
        continue-on-error: true # Don't fail on type errors for now

      - name: Test with pytest
        run: |
          python -m pytest tests/ -v --cov=webscraper --cov-report=term-missing
        continue-on-error: true

      - name: Test installation
        run: |
          pip install -e .
          python -c "import webscraper; print('Package installed successfully')"
          respectscraper --help

  release-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build release distributions
        run: |
          python -m build

      - name: Check distributions
        run: |
          python -m twine check dist/*

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: release-build
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/respectscraper/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
